#!/bin/bash

set -e

source ${HTTPD_CONTAINER_SCRIPTS_PATH}/common.sh

echo "---> Enabling s2i support in httpd24 image"

config_s2i

echo "---> Installing application source"
python << END
import os
import urllib
import requests
from bs4 import BeautifulSoup
index=open('/tmp/src/index.html','r')
soup = BeautifulSoup(index, 'html.parser')
index.close()
wheels_check = []
releases = requests.get('https://api.github.com/repos/AICoE/wheels/releases')
if releases.status_code == 200:
    for release in releases.json():
        osver = release.get('name').split('/')[0]
        if not os.path.exists(os.path.join(os.getcwd(), release.get('name'))):
            try:
                os.makedirs(release.get('name'))
            except Exception as e:
                continue
        for asset in release.get('assets', []):
            if asset.get('name') == 'build_info.yaml':
                continue
            elif os.path.join(release['name'], asset['name']) not in wheels_check:
                wheel_file_path=os.path.join(release['name'], asset['name'])
                urllib.urlretrieve(asset.get('browser_download_url'),wheel_file_path)
                wheels_check.append(os.path.join(release['name'], asset['name']))
                tag="<h3 style=\"text-transform: capitalize;\">{}</h3>\n\t\t\t<ul>\n\t\t\t\t<li>\n\t\t\t\t\t<a href=\"{}\">{}</a>\n\t\t\t\t</li>\n\t\t\t</ul>\n".format(osver,wheel_file_path,wheel_file_path)
                tag_h = BeautifulSoup(tag, 'html.parser')
                soup.section.append(tag_h)
complete=open('/tmp/src/index.html','w')
complete.write(str(soup))
complete.close()
END
cp -Rf /tmp/src/. ./

process_extending_files ${HTTPD_APP_ROOT}/src/httpd-post-assemble/ ${HTTPD_CONTAINER_SCRIPTS_PATH}/post-assemble/

# Fix source directory permissions
fix-permissions ./
